/*
 * This file is generated by jOOQ.
 */
package fi.morabotti.skydive.db.tables.records;


import fi.morabotti.skydive.db.enums.AccountRole;
import fi.morabotti.skydive.db.tables.Account;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountRecord extends TableRecordImpl<AccountRecord> implements Record6<Long, String, byte[], byte[], AccountRole, Timestamp> {

    private static final long serialVersionUID = -1335338012;

    /**
     * Setter for <code>account.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>account.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>account.username</code>.
     */
    public void setUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>account.username</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>account.password_hash</code>.
     */
    public void setPasswordHash(byte... value) {
        set(2, value);
    }

    /**
     * Getter for <code>account.password_hash</code>.
     */
    public byte[] getPasswordHash() {
        return (byte[]) get(2);
    }

    /**
     * Setter for <code>account.password_salt</code>.
     */
    public void setPasswordSalt(byte... value) {
        set(3, value);
    }

    /**
     * Getter for <code>account.password_salt</code>.
     */
    public byte[] getPasswordSalt() {
        return (byte[]) get(3);
    }

    /**
     * Setter for <code>account.role</code>.
     */
    public void setRole(AccountRole value) {
        set(4, value);
    }

    /**
     * Getter for <code>account.role</code>.
     */
    public AccountRole getRole() {
        return (AccountRole) get(4);
    }

    /**
     * Setter for <code>account.deleted_at</code>.
     */
    public void setDeletedAt(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>account.deleted_at</code>.
     */
    public Timestamp getDeletedAt() {
        return (Timestamp) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, byte[], byte[], AccountRole, Timestamp> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, byte[], byte[], AccountRole, Timestamp> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Account.ACCOUNT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Account.ACCOUNT.USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field3() {
        return Account.ACCOUNT.PASSWORD_HASH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field4() {
        return Account.ACCOUNT.PASSWORD_SALT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<AccountRole> field5() {
        return Account.ACCOUNT.ROLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return Account.ACCOUNT.DELETED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component3() {
        return getPasswordHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component4() {
        return getPasswordSalt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRole component5() {
        return getRole();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getDeletedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value3() {
        return getPasswordHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value4() {
        return getPasswordSalt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRole value5() {
        return getRole();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getDeletedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value2(String value) {
        setUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value3(byte... value) {
        setPasswordHash(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value4(byte... value) {
        setPasswordSalt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value5(AccountRole value) {
        setRole(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value6(Timestamp value) {
        setDeletedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord values(Long value1, String value2, byte[] value3, byte[] value4, AccountRole value5, Timestamp value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountRecord
     */
    public AccountRecord() {
        super(Account.ACCOUNT);
    }

    /**
     * Create a detached, initialised AccountRecord
     */
    public AccountRecord(Long id, String username, byte[] passwordHash, byte[] passwordSalt, AccountRole role, Timestamp deletedAt) {
        super(Account.ACCOUNT);

        set(0, id);
        set(1, username);
        set(2, passwordHash);
        set(3, passwordSalt);
        set(4, role);
        set(5, deletedAt);
    }
}
