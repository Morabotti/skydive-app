/*
 * This file is generated by jOOQ.
 */
package fi.morabotti.skydive.db.tables;


import fi.morabotti.skydive.db.DefaultSchema;
import fi.morabotti.skydive.db.Indexes;
import fi.morabotti.skydive.db.Keys;
import fi.morabotti.skydive.db.tables.records.ClubActivityParticipationRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClubActivityParticipation extends TableImpl<ClubActivityParticipationRecord> {

    private static final long serialVersionUID = 1050627016;

    /**
     * The reference instance of <code>club_activity_participation</code>
     */
    public static final ClubActivityParticipation CLUB_ACTIVITY_PARTICIPATION = new ClubActivityParticipation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClubActivityParticipationRecord> getRecordType() {
        return ClubActivityParticipationRecord.class;
    }

    /**
     * The column <code>club_activity_participation.id</code>.
     */
    public final TableField<ClubActivityParticipationRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>club_activity_participation.account_id</code>.
     */
    public final TableField<ClubActivityParticipationRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>club_activity_participation.club_activity_id</code>.
     */
    public final TableField<ClubActivityParticipationRecord, Long> CLUB_ACTIVITY_ID = createField("club_activity_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>club_activity_participation.created_at</code>.
     */
    public final TableField<ClubActivityParticipationRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>club_activity_participation.deleted_at</code>.
     */
    public final TableField<ClubActivityParticipationRecord, Timestamp> DELETED_AT = createField("deleted_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>club_activity_participation</code> table reference
     */
    public ClubActivityParticipation() {
        this(DSL.name("club_activity_participation"), null);
    }

    /**
     * Create an aliased <code>club_activity_participation</code> table reference
     */
    public ClubActivityParticipation(String alias) {
        this(DSL.name(alias), CLUB_ACTIVITY_PARTICIPATION);
    }

    /**
     * Create an aliased <code>club_activity_participation</code> table reference
     */
    public ClubActivityParticipation(Name alias) {
        this(alias, CLUB_ACTIVITY_PARTICIPATION);
    }

    private ClubActivityParticipation(Name alias, Table<ClubActivityParticipationRecord> aliased) {
        this(alias, aliased, null);
    }

    private ClubActivityParticipation(Name alias, Table<ClubActivityParticipationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ClubActivityParticipation(Table<O> child, ForeignKey<O, ClubActivityParticipationRecord> key) {
        super(child, key, CLUB_ACTIVITY_PARTICIPATION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CLUB_ACTIVITY_PARTICIPATION_ACCOUNT_ID, Indexes.CLUB_ACTIVITY_PARTICIPATION_FK_CLUB_ACTIVITY_PARTICIPATION_ACTIVITY_ID, Indexes.CLUB_ACTIVITY_PARTICIPATION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ClubActivityParticipationRecord, Long> getIdentity() {
        return Keys.IDENTITY_CLUB_ACTIVITY_PARTICIPATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClubActivityParticipationRecord>> getKeys() {
        return Arrays.<UniqueKey<ClubActivityParticipationRecord>>asList(Keys.KEY_CLUB_ACTIVITY_PARTICIPATION_ID, Keys.KEY_CLUB_ACTIVITY_PARTICIPATION_ACCOUNT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ClubActivityParticipationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ClubActivityParticipationRecord, ?>>asList(Keys.FK_CLUB_ACTIVITY_PARTICIPATION_ACCOUNT_ID, Keys.FK_CLUB_ACTIVITY_PARTICIPATION_ACTIVITY_ID);
    }

    public Account account() {
        return new Account(this, Keys.FK_CLUB_ACTIVITY_PARTICIPATION_ACCOUNT_ID);
    }

    public ClubActivity clubActivity() {
        return new ClubActivity(this, Keys.FK_CLUB_ACTIVITY_PARTICIPATION_ACTIVITY_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClubActivityParticipation as(String alias) {
        return new ClubActivityParticipation(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClubActivityParticipation as(Name alias) {
        return new ClubActivityParticipation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ClubActivityParticipation rename(String name) {
        return new ClubActivityParticipation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ClubActivityParticipation rename(Name name) {
        return new ClubActivityParticipation(name, null);
    }
}
